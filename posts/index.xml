<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Hakan Turgay</title>
        <link>https://turgayh.github.io/posts/</link>
        <description>Recent content in Posts on Hakan Turgay</description>
        <generator>Hugo -- gohugo.io</generator>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 04 Jul 2020 18:59:43 +0300</lastBuildDate>
        <atom:link href="https://turgayh.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Algoritma Cozumu - Orta</title>
            <link>https://turgayh.github.io/posts/2020/07/algoritma-cozumu---orta/</link>
            <pubDate>Sat, 04 Jul 2020 18:59:43 +0300</pubDate>
            
            <guid>https://turgayh.github.io/posts/2020/07/algoritma-cozumu---orta/</guid>
            <description>Problem tanınımı  N bir tamsayı ve 1 den N kadar olan sayılardan oluşan permütesyon kümesi L olsun. Örnek N = 4 ve L = [4,2,1,3] İstenilen L dizisiniz sıralanması fakat sıralama belli bir kurala göre olucak . Seçilen bir öğe ya en sola ya da en sağa atabiliyoruz. Sıralamak için minimum adım sayısını bulunuz
 Örnek
 N = 2 L = [1,2] sonuç 0 (Sıralı) N = 6 L = [5, 2 ,1 ,3 ,4 6] sonuç 3   Cozum  En buyuk artan ardisik(1 er 1 er ) kume bulunur L = [5,2,1,3,4,6] orneginde 2 , 3 , 4 uzunlugu S olsun Eger bunlar disindakileri saga veya sola atarsak 2,3,4 yan yana gelecektir .</description>
            <content type="html"><![CDATA[

<h2 id="problem-tanınımı">Problem tanınımı</h2>

<ul>
<li>N bir tamsayı ve  1 den N kadar olan sayılardan oluşan permütesyon kümesi   L  olsun.</li>
<li>Örnek  N = 4 ve L =  [4,2,1,3]</li>
<li>İstenilen   L dizisiniz sıralanması   fakat sıralama belli bir kurala göre olucak .</li>
<li>Seçilen bir öğe <strong>ya en sola ya da en sağa atabiliyoruz</strong>.</li>

<li><p>Sıralamak için minimum adım sayısını bulunuz</p></li>

<li><p>Örnek</p>

<ul>
<li><code>N = 2   L = [1,2]   sonuç  0   (Sıralı)</code></li>
<li><code>N = 6   L = [5, 2 ,1 ,3 ,4 6]   sonuç 3</code></li>
</ul></li>
</ul>

<h2 id="cozum">Cozum</h2>

<ul>
<li>En buyuk artan ardisik(1 er 1 er ) kume bulunur</li>
<li>L = [5,2,1,3,4,6] orneginde  <code>2 , 3 , 4</code>  <strong>uzunlugu  S olsun</strong></li>
<li>Eger bunlar disindakileri saga veya sola atarsak 2,3,4 yan yana gelecektir .</li>

<li><p>Sonuc olarak diziyi  <code>N - S</code> hamlede siralayabiliriz  (tumevarim ile ispatlanabilinir)</p></li>

<li><p>En uzun ardisik artan dizi uzunlugunu (S) bulmak icin
<img src="../../resources/_gen/images/blog-1/firstweekQ1.png" alt="'artan-dizi-bulma'" /></p></li>
</ul>

<h2 id="sinirlar">Sinirlar</h2>

<ul>
<li>1&lt;= N &lt;= 10^6</li>
</ul>

<h2 id="kod-python">Kod - Python</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-Python" data-lang="Python">N <span style="color:#f92672">=</span> int(input())
L <span style="color:#f92672">=</span> list(map(int,input()<span style="color:#f92672">.</span>split())) <span style="color:#75715e"># Tek satirdaki bosluk verilmis alma</span>

A <span style="color:#f92672">=</span> [<span style="color:#ae81ff">0</span>]<span style="color:#f92672">*</span>(N<span style="color:#f92672">+</span><span style="color:#ae81ff">1</span>)

<span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> range(N):
    A[L[i]] <span style="color:#f92672">=</span> A[L[i] <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>] <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>
<span style="color:#66d9ef">print</span>(N <span style="color:#f92672">-</span> max(A))</code></pre></div>
<h2 id="kod-c">Kod - C++</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-cpp" data-lang="cpp"><span style="color:#75715e">#include</span><span style="color:#75715e">&lt;bits/stdc++.h&gt;</span><span style="color:#75715e">
</span><span style="color:#75715e"></span> 
<span style="color:#66d9ef">using</span> <span style="color:#66d9ef">namespace</span> std;
 
<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">int</span> N <span style="color:#f92672">=</span> <span style="color:#ae81ff">1000005</span>;

<span style="color:#66d9ef">int</span> arr[N], n;
<span style="color:#66d9ef">int</span> lsis[N]; 

<span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>() {

    cin <span style="color:#f92672">&gt;&gt;</span> n;

    <span style="color:#66d9ef">for</span>(<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span> ; i <span style="color:#f92672">&lt;=</span> n ; i<span style="color:#f92672">++</span> ){
        cin <span style="color:#f92672">&gt;&gt;</span> arr[i];
    }

    <span style="color:#66d9ef">for</span>(<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span> ; i <span style="color:#f92672">&lt;=</span> n ; i<span style="color:#f92672">++</span>) {
        lsis[arr[i]] <span style="color:#f92672">=</span> lsis[arr[i]<span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>]<span style="color:#f92672">+</span><span style="color:#ae81ff">1</span>;
    }

    cout <span style="color:#f92672">&lt;&lt;</span> n <span style="color:#f92672">-</span> <span style="color:#f92672">*</span>max_element(lsis<span style="color:#f92672">+</span><span style="color:#ae81ff">1</span>,lsis<span style="color:#f92672">+</span><span style="color:#ae81ff">1</span><span style="color:#f92672">+</span>n) <span style="color:#f92672">&lt;&lt;</span> endl;
}
</code></pre></div>]]></content>
        </item>
        
    </channel>
</rss>
